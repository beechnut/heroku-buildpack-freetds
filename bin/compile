#!/usr/bin/env ruby

# sync output
$stdout.sync = true

BUILD_DIR = ARGV[0]
CACHE_DIR = ARGV[1]

VERSION = "0.91.112"
ARCHIVE_NAME = "freetds-#{VERSION}"

puts  "-----> Fetching & Extracting FreeTDS #{VERSION}"
print `mkdir -p #{CACHE_DIR}`
print `curl ftp://ftp.freetds.org/pub/freetds/stable/#{ARCHIVE_NAME}.tar.gz -o - | tar -xz -C #{CACHE_DIR} -f -`

puts  "-----> Configurating, Building, and Installing FreeTDS"
print `mkdir -p /app/vendor/freetds`
print `cd #{CACHE_DIR}/#{ARCHIVE_NAME} && ./configure --prefix=/app/vendor/freetds && make && make install`

# puts  "-----> Building FreeTDS"
# print `cd #{CACHE_DIR}/#{ARCHIVE_NAME} && make`

# puts  "-----> Installing FreeTDS into /app/vendor/freetds"
# print `cd #{CACHE_DIR}/#{ARCHIVE_NAME} && make install`

puts  "-----> Where is FreeTDS? (Find TSQL.)"
puts `find / -name tsql`

puts  "-----> Copying FreeTDS into #{BUILD_DIR}"
print `mkdir -p #{BUILD_DIR}/vendor/`
print `cp -r /app/vendor/freetds #{BUILD_DIR}/vendor/freetds`

puts  "-----> Confirming FreeTDS is copied to #{BUILD_DIR}"
print `ls #{BUILD_DIR}/vendor/freetds/`

puts  "-----> Writing FreeTDS configuration for subsequent buildpack"
`export PATH="/app/vendor/freetds/bin:$PATH"`
`export FREETDS_DIR="/app/vendor/freetds"`
`export FREETDS_INCLUDE="/app/vendor/freetds/include"`
`export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/app/vendor/freetds"`

puts "\tWriting file #{BUILD_DIR}/profile.d/"
print `mkdir -p #{BUILD_DIR}/profile.d/`
File.open("#{BUILD_DIR}/profile.d/freetds.sh", "w") do |file|
  file.write 'export PATH="/app/vendor/freetds/bin:$PATH"'
  file.write 'export FREETDS_DIR=/app/vendor/freetds'
  file.write 'export FREETDS_INCLUDE=/app/vendor/freetds/include'
  file.write 'export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/app/vendor/freetds"'
end